/*
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?
*/

class Solution {
public:
    int uniquePaths(int m, int n) {
        vector<vector<int>> X(m,vector<int>(n));
        for(int i=0;i<m;i++){
            X[i][0]=1;
        }
        for(int i=0;i<n;i++){
            X[0][i]=1;
        }
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                X[i][j]=X[i-1][j]+X[i][j-1];
            }
        }
        return X[m-1][n-1];
    }
};

class Solution2 {
public:
    int uniquePaths(int m, int n) {
        int N = n + m - 2;
        int k = m - 1;
        double res = 1;
        for (int i = 1; i <= k; i++)
            res = res * (N - k + i) / i;
        return (int)res;
    }
};
