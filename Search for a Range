/*Given a sorted array of integers, find the starting and ending position of a given target value.

Your algorithm's runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

For example,
Given [5, 7, 7, 8, 8, 10] and target value 8,
return [3, 4].
*/

class Solution {
public:
    vector<int> searchRange(vector<int>& A, int target) {
        int result1=-1,result2=-1,start=0,end=A.size()-1,mid;
        vector<int> res;
        while(start<=end){
            mid=start+((end-start)/2);
            if(A[mid]==target){
                result1=mid;
                end=mid-1;
            }
            else if(A[mid]>target){
                end=mid-1;
            }
            else{
                start=mid+1;    
            }
        }
        start=0;end=A.size()-1;
        while(start<=end){
            mid=start+((end-start)/2);
            if(A[mid]==target){
                result2=mid;
                start=mid+1;
            }
            else if(A[mid]>target){
                end=mid-1;
            }
            else{
                start=mid+1;    
            }
    }
    if(result1==-1 && result2==-1)
        return vector<int>(2,-1);
    res.push_back(result1);
    res.push_back(result2);
    return res;
    }
};
