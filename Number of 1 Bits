/*
Write a function that takes an unsigned integer and returns the number of 1 bits it has.

Example:

The 32-bit integer 11 has binary representation

00000000000000000000000000001011
so the function should return 3.
*/

class Solution
{
public:
	int hammingWeight(uint32_t n) {
		int count = 0;
		while (n) {
			n &= (n - 1);
			count++;
		}
		return count;
	}
};

int Solution::numSetBits(unsigned int A) {
    unsigned int count = 0;
    while(A)
    {
    count += A & 1;
    A >>= 1;
    }
    return count;
}
