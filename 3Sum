/*
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
*/

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        sort(nums.begin(),nums.end());
        for(int i=0,L=nums.size();i<L-2;i++){
            if(i==0 || nums[i] > nums[i-1]){
                int l=i+1,r=nums.size()-1;
                while(l<r){
                    int temp=nums[i]+nums[l]+nums[r];
                    if(temp==0){
                        vector<int> res(3);
                        res[0]=nums[i];
                        res[1]=nums[l];
                        res[2]=nums[r];
                        result.push_back(res);
                        l++;
                        r--;
                        while(l<r&&(nums[l]==nums[l-1])) l++;
                        while(l<r&&(nums[r]==nums[r+1])) r--;
                    }
                else if(temp<0) 
                    l++;
                else            
                    r--;
            }
        }
        }
        return result;
    }
};
