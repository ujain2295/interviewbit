/*
Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example:
Given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.

For this problem, return the maximum sum.
*/

int Solution::maxSubArray(const vector<int> &A) {
    int lenA=A.size();
    int currsum=0,maxsum=-9999999;
    for(int i=0;i<lenA;i++){
        currsum+=A[i];
        maxsum=max(currsum,maxsum);
        if(currsum<0) currsum=0;
    }
    return maxsum;
}
