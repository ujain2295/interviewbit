/*
Given a binary tree, flatten it to a linked list in-place.

For example,
Given

         1
        / \
       2   5
      / \   \
     3   4   6
The flattened tree should look like:
   1
    \
     2
      \
       3
        \
         4
          \
           5
            \
             6
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* A) {
        while(A){
            if(A->left){
                TreeNode* p=A->left;
                while(p->right) 
                    p=p->right;
                p->right=A->right;
                A->right=A->left;
                A->left=NULL;
            }
            A=A->right;
        }
    return;
    }
};
