/*
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
*/
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> X;
        vector<int> result(2);
        for(int i=0,l=nums.size();i<l;i++){
            if(X.find(target-nums[i])!=X.end()&&X[target-nums[i]]!=i){
                result[0]=(X[target-nums[i]]);
                result[1]=i;
                return result;
            }
            X[nums[i]]=i;
        }
        return result;
    }
};
