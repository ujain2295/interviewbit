/*
Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.
*/

class Solution {
public:
    string expandkaro(string &s, int l, int r){
        int n=s.size();
        while(l>=0 && r<=n-1 && s[l]==s[r]){
            l--;
            r++;
        }
        return s.substr(l+1,r-l-1);
    }
    string longestPalindrome(string s) {
        int n=s.size();
        if(n==0) return "";
        string bada=s.substr(0,1);
        for(int i=0;i<n-1;i++){
            string p1=expandkaro(s,i,i);
            string p2=expandkaro(s,i,i+1);
            if(p1.size()>bada.size()) bada=p1;
            if(p2.size()>bada.size()) bada=p2;
        }
        return bada;
    }
};
