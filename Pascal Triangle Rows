/*
Given numRows, generate the first numRows of Pascal’s triangle.
Pascal’s triangle : To generate A[C] in row R, sum up A’[C] and A’[C-1] from previous row R - 1.

Example:
Given numRows = 5,

Return
[
     [1],
     [1,1],
     [1,2,1],
     [1,3,3,1],
     [1,4,6,4,1]
]
*/
vector<vector<int> > Solution::generate(int A) {
    vector<vector<int>> ans;
    if(A<=0) return ans;
    ans.push_back(vector<int>(1,1));
    for(int i=0;i<A-1;i++){
        vector<int> addans;
        addans.push_back(1);
        for(int j=0;j<ans[i].size()-1;j++){
            addans.push_back(ans[i][j]+ans[i][j+1]);
        }
        addans.push_back(1);
        ans.push_back(addans);
    }
    return ans;
}
