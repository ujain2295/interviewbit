# Time:  O(n)
# Space: O(1)

/*
Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container.
*/

class Solution {
public:
    int maxArea(vector<int>& height) {
        if(height.size()<2) return 0;
        if(height.size()==2) {
            return min(height[1],height[0]);
        }
        int l=0,r=height.size()-1,area,maxar=0;
        while(l<r){
            area=(r-l)*min(height[l],height[r]);
            maxar=max(area,maxar);
            if(height[l]>height[r]) r--;
            else l++;
        }
        return maxar;
    }
};

class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        max_area, i, j = 0, 0, len(height) - 1
        while i < j:
            max_area = max(max_area, min(height[i], height[j]) * (j - i))
            if height[i] < height[j]:
                i += 1
            else:
                j -= 1
        return max_area
