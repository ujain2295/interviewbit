/*
You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
*/
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *dummyhead=new ListNode(-1);
        ListNode *p=dummyhead;
        while(l1&&l2){
            ListNode *temp=new ListNode(l1->val+l2->val);
            p->next=temp;
            p=p->next;
            l1=l1->next;
            l2=l2->next;
        }
        while(l1){
            ListNode *temp=new ListNode(l1->val);
            p->next=temp;
            p=p->next;
            l1=l1->next;
        }
        while(l2){
            ListNode *temp=new ListNode(l2->val);
            p->next=temp;
            p=p->next;
            l2=l2->next;
        }
        p=dummyhead->next;
        while(p->next){
            if(p->val>=10){
                int add=(p->val)/10;
                p->val%=10;
                p->next->val=(p->next->val)+add;
            }
            p=p->next;
        }
        if(p->val>=10){
                int add=(p->val)/10;
                p->val%=10;
                p->next=new ListNode(add);
        }
        return dummyhead->next;
    }
};
