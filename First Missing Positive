/*
Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.
*/

class Solution {
public:
    int firstMissingPositive(vector<int>& A) {
        for(int i=0,l=A.size();i<l;i++){
            while (A[i]!=i+1) {
                if(A[i]<=0||A[i]>=l) break;
                if(A[i]==A[A[i]-1]) break;
                
                int temp=A[i];
                A[i] = A[temp-1];
                A[temp-1] = temp;
            }
        }
        
        for(int i=0,l=A.size();i<l;i++){
            if(A[i]!=i+1) return i+1;
        }
        
        return A.size()+1;
    }
};
