class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        //unordered_map<char,bool> X;
        int n=board.size(),m=board[0].size();
        for(int i=0;i<n;i++){
            unordered_map<char,bool> X;
            for(int j=0;j<m;j++){
                if(board[i][j]!='.' && X.find(board[i][j])!=X.end())
                    return false;
                X[board[i][j]]=true;
            }
        }
        for(int j=0;j<n;j++){
            unordered_map<char,bool> X;
            for(int i=0;i<m;i++){
                if(board[i][j]!='.' && X.find(board[i][j])!=X.end())
                    return false;
                X[board[i][j]]=true;
            }
        }
        for(int k=3;k<=n;k+=3){
            for(int l=3;l<=m;l+=3){
                unordered_map<char,bool> X;
                for(int i=k-3;i<k;i++){
                    for(int j=l-3;j<l;j++){
                        if(board[i][j]!='.' && X.find(board[i][j])!=X.end())
                            return false;
                        X[board[i][j]]=true;
                    }
                }
            }
        }
        return true;
    }
};
