/*
Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.

Follow up:
Did you use extra space?
A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?
*/

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n=matrix.size();
        int m=matrix[0].size();
        bool fc=0,fr=0;
        for(int i=0;i<n;i++){
            if(matrix[i][0]==0){
                fc=1;
                break;
            }
        }
        for(int i=0;i<m;i++){
            if(matrix[0][i]==0){
                fr=1;
                break;   
            }
        }
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                if(matrix[i][j]==0){
                    matrix[i][0]=0;
                    matrix[0][j]=0;
                }
            }
        }
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                if(matrix[i][0]==0||matrix[0][j]==0){
                    matrix[i][j]=0;
                }
            }
        }
        if(fc)
            for(int i=0;i<n;i++)
                matrix[i][0]=0;
        if(fr)
            for(int i=0;i<m;i++)
                matrix[0][i]=0;
    }
};
