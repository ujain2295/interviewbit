/*
Given a number N, return number of ways you can draw N chords in a circle with 2*N points such that no 2 chords intersect.
Two ways are different if there exists a chord which is present in one way and not in other.

For example,

N=2
If points are numbered 1 to 4 in clockwise direction, then different ways to draw chords are:
{(1-2), (3-4)} and {(1-4), (2-3)}

So, we return 2.
Notes:

1 ≤ N ≤ 1000
Return answer modulo 109+7.
*/

int chordCnt(int A) {
    unsigned long int catalanDP[A+1];
    catalanDP[0]=catalanDP[1]=1;
    int i,j;
    for(i=2;i<=A;i++){
        catalanDP[i]=0;
        for(j=0;j<i;j++){
            catalanDP[i]+=(catalanDP[j]*catalanDP[i-j-1])%(1000000000+7);
        }
        catalanDP[i]%=(1000000000+7);
    }
    return (int)catalanDP[A];
}
