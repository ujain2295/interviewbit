/*
Implement wildcard pattern matching with support for '?' and '*'.

'?' Matches any single character.
'*' Matches any sequence of characters (including the empty sequence).

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "*") → true
isMatch("aa", "a*") → true
isMatch("ab", "?*") → true
isMatch("aab", "c*a*b") → false
*/

bool isMatch(const string &s, const string &p) {  
     int i=0,j=0;  
     int star=-1;  
     int si=i;  
     while(i<s.length())  
     {  
         if(p[j]=='?'||p[j]==s[i])  
         {  
           i++;  
           j++;  
           continue;  
         }  
         if(p[j]=='*')  
         {  
           star=j++;  
           si=i;  
           continue;  
         }  
        if(star!=-1)  
        {  
         j=star+1;  
         i=++si;  
         continue;  
        }  
       return false;  
     }  
     while(j<p.length()&&p[j]=='*')  
       j+=1;  
     return j==p.length();  
   }
